name: test
on: [push]

env:
  MIN_LINE_RATE: 0.2

jobs:
  run_tests:
    runs-on: self-hosted
    container:
      image: python:3.10
    steps:
      - name: Update base image
        run: |
          apt update
          apt install -qy libkrb5-dev libsasl2-dev
          pip install poetry==1.3.2
      - uses: actions/checkout@v2
      - name: Install packages and extras
        run: poetry install --extras "forecast gsheets gdrive" --with dev
      - name: Test base imports
        run: poetry run python -c 'from muttlib import dbconn, utils'
      - name: Test forecast extra
        run: |
          poetry run python -c 'from muttlib import forecast'
      - name: Test gsheetsconn
        run: |
          poetry run python -c 'from muttlib import gsheetsconn'
      - name: Test gdrive
        run: |
          poetry run python -c 'from muttlib import gdrive'
      - name: Run nox
        run: |
          poetry run nox --envdir $GITHUB_WORKSPACE/.nox --sessions tests

  lint:
    runs-on: [self-hosted]
    container:
      image: python:3.10
    steps:
      - name: Update base image
        run: |
          apt update
          apt install -y libkrb5-dev libsasl2-dev
          pip install poetry==1.3.2
      - uses: actions/checkout@v2
      - name: Install package
        run: poetry install -vvv --with dev -E "gdrive gsheets forecast"
      - name: Run nox
        run: poetry run nox --envdir $GITHUB_WORKSPACE/.nox --sessions precommit_hooks

  docstr-cov:
    runs-on: [self-hosted]
    container:
      image: python:3.10
    steps:
      - name: Update base image
        run: |
          apt update
          apt install -y libkrb5-dev libsasl2-dev
          pip install poetry==1.3.2
      - uses: actions/checkout@v2
      - name: Install package
        run: poetry install -vvv --with dev
      - name: Run interrogate
        run: poetry run interrogate muttlib -c pyproject.toml -vv --generate-badge docs_coverage.svg --badge-style flat

  bandit:
    runs-on: [self-hosted]
    container:
      image: python:3.10
    steps:
      - name: Update base image
        run: |
          apt update
          apt install -y libkrb5-dev libsasl2-dev
          pip install poetry==1.3.2
      - uses: actions/checkout@v2
      - name: Install package
        run: poetry install -vvv --with dev
      - name: Run nox
        run: poetry run nox --envdir $GITHUB_WORKSPACE/.nox --sessions bandit

  typing:
    runs-on: [self-hosted]
    container:
      image: python:3.10
    steps:
      - name: Update base image
        run: |
          apt update
          apt install -y libkrb5-dev libsasl2-dev
          pip install poetry==1.3.2
      - uses: actions/checkout@v2
      - name: Install package
        run: poetry install -vvv --with dev
      - name: Run mypy and check lines
        run: |
          poetry run mypy ./muttlib --cobertura-xml-report ./
          line_rate=$(cat cobertura.xml | grep -oP '(?<=line-rate\W{2})(\d.\d+)(?=\W\s\w+)')
          python -c "import sys; exit(float(sys.argv[1]) <= float(sys.argv[2]))" $line_rate $MIN_LINE_RATE
          exit_status=$?
          exit $exit_status
